"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const dotenv_1 = require("dotenv");
const ollamaService_1 = require("./services/ollamaService");
// Carrega as vari√°veis de ambiente
(0, dotenv_1.config)();
async function testOllama() {
    console.log('üîç Testando conex√£o com Ollama...');
    try {
        const ollamaService = new ollamaService_1.OllamaService();
        // Testa a conex√£o
        console.log('üì° Testando conex√£o...');
        const isConnected = await ollamaService.testConnection();
        if (isConnected) {
            console.log('‚úÖ Conex√£o com Ollama estabelecida com sucesso!');
            // Testa gera√ß√£o de resposta
            console.log('ü§ñ Testando gera√ß√£o de resposta...');
            const response = await ollamaService.generateResponse('Ol√°! Como voc√™ est√°?');
            console.log(`Resposta: ${response}`);
            // Testa gera√ß√£o de embedding
            console.log('üî¢ Testando gera√ß√£o de embedding...');
            const embedding = await ollamaService.generateEmbedding('Teste de embedding');
            console.log(`Embedding gerado com ${embedding.length} dimens√µes`);
            console.log('‚úÖ Todos os testes passaram!');
        }
        else {
            console.log('‚ùå Falha na conex√£o com Ollama');
            console.log('Verifique se:');
            console.log('1. O Ollama est√° rodando');
            console.log('2. A URL est√° correta no arquivo .env');
            console.log('3. O modelo mistral est√° dispon√≠vel');
        }
    }
    catch (error) {
        console.error('‚ùå Erro durante o teste:', error);
    }
}
// Executa o teste se chamado diretamente
if (require.main === module) {
    testOllama();
}
//# sourceMappingURL=testOllama.js.map