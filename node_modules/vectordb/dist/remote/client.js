"use strict";
// Copyright 2023 LanceDB Developers.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.HttpLancedbClient = void 0;
const axios_1 = require("axios");
const apache_arrow_1 = require("apache-arrow");
class HttpLancedbClient {
    constructor(url, apiKey, _dbName) {
        this._dbName = _dbName;
        this._url = url;
        this._apiKey = () => apiKey;
    }
    get uri() {
        return this._url;
    }
    search(tableName, vector, k, nprobes, refineFactor, columns, filter) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield axios_1.default.post(`${this._url}/v1/table/${tableName}/query/`, {
                vector,
                k,
                nprobes,
                refineFactor,
                columns,
                filter
            }, {
                headers: Object.assign({ 'Content-Type': 'application/json', 'x-api-key': this._apiKey() }, (this._dbName !== undefined ? { 'x-lancedb-database': this._dbName } : {})),
                responseType: 'arraybuffer',
                timeout: 10000
            }).catch((err) => {
                console.error('error: ', err);
                return err.response;
            });
            if (response.status !== 200) {
                const errorData = new TextDecoder().decode(response.data);
                throw new Error(`Server Error, status: ${response.status}, ` +
                    `message: ${response.statusText}: ${errorData}`);
            }
            const table = (0, apache_arrow_1.tableFromIPC)(response.data);
            return table;
        });
    }
    /**
     * Sent GET request.
     */
    get(path, params) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield axios_1.default.get(`${this._url}${path}`, {
                headers: {
                    'Content-Type': 'application/json',
                    'x-api-key': this._apiKey()
                },
                params,
                timeout: 10000
            }).catch((err) => {
                console.error('error: ', err);
                return err.response;
            });
            if (response.status !== 200) {
                const errorData = new TextDecoder().decode(response.data);
                throw new Error(`Server Error, status: ${response.status}, ` +
                    `message: ${response.statusText}: ${errorData}`);
            }
            return response;
        });
    }
}
exports.HttpLancedbClient = HttpLancedbClient;
